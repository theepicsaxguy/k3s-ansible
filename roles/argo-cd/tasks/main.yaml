---
- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml
  any_errors_fatal: true

- name: Role Provisioning
  when: ansible_host in k3s_map.server.hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        host: "{{ ansible_host | default('127.0.0.1') }}"
        port: '{{ k3s_vars.server.api.port }}'
        state: started           # Wait for the port to become *available*, not drained
        timeout: 120            # Allow up to 2 minutes for the K3s API to come up
        delay: 5                # Optional initial delay before the first check
      any_errors_fatal: true

    - name: Set checksums fact
      ansible.builtin.uri:
        url: '{{ argocd_project.release.checksum }}'
        return_content: true
      register: checksums
      check_mode: false
      run_once: true

    - name: Set sha256 checksum fact
      ansible.builtin.set_fact:
        sha256_checksum: "{{ item.split(' ')[0] }}"
      loop: "{{ checksums.content.split('\n') }}"
      when: item | regex_search(argocd_vars.release.file + '$')
      run_once: true

    - name: Install binary
      ansible.builtin.get_url:
        url: '{{ argocd_project.release.file }}'
        checksum: sha256:{{ sha256_checksum }}
        dest: '{{ k3s_map.node.directory.bin }}/argocd'
        owner: root
        group: root
        mode: '755'
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Add repository
      kubernetes.core.helm_repository:
        name: '{{ argocd_vars.kubernetes.helm.repository.org }}'
        repo_url: '{{ argocd_map.helm.repository.url }}'

    - name: Chart Setup
      run_once: true
      block:
        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            argocd_postinstall: false

        - name: Install chart
          kubernetes.core.helm:
            chart_ref: '{{ argocd_map.helm.chart.reference }}'
            chart_version: '{{ argocd_vars.kubernetes.helm.chart.version }}'
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            name: '{{ argocd_vars.kubernetes.helm.chart.name }}'
            namespace: '{{ argocd_vars.kubernetes.namespace }}'
            timeout: '{{ argocd_map.helm.timeout }}'
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            create_namespace: true
            update_repo_cache: true
            wait: true
          register: result
          delay: 1
          retries: 3
          until: result is not failed