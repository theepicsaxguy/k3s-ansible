---
argocd_vars:
  kubernetes:
    application_set:
      replicas: 1
      resources:
        limits:
          cpu:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
    configs:
      cm:
        admin:
          enabled: false
        exec:
          enabled: true
        status_badge:
          # -- See [documentation](https://argo-cd.readthedocs.io/en/stable/user-guide/status-badge/), for details
          enabled: false
      params:
        application:
          # -- Namespaces where applications may be created
          namespaces:
            - kube-system
        applicationsetcontroller:
          git:
            new_file_globbing:
              # -- See [documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Generators-Git-File-Globbing/), for details
              enabled: true
            submodule:
              # -- Enable git submodule support
              enabled: true
          # -- Available options are `debug`, `info', `warn` and `error`
          log_level: warn
          progressive_syncs:
            # -- Enable use of Progressive Syncs
            enabled: true
        controller:
          # -- Available options are `debug`, `info', `warn` and `error`
          log_level: warn
          sharding:
            # -- Available options are `legacy`, `round-robin` and `consistent-hashing`,
            # see [documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/high_availability/) for details
            algorithm: consistent-hashing
        dexserver:
          # -- Available options are `debug`, `info', `warn` and `error`
          log_level: warn
        notificationscontroller:
          # -- Available options are `debug`, `info', `warn` and `error`
          log_level: warn
        reposerver:
          # -- Available options are `debug`, `info', `warn` and `error`
          log_level: warn
        server:
          # -- If `true`, HTTPRoute is used, otherwise Ingress
          insecure: true
          # -- Available options are `debug`, `info', `warn` and `error`
          log_level: warn
    controller:
      dynamic_cluster_distribution:
        # -- See [documentation](https://argo-cd.readthedocs.io/en/stable/operator-manual/dynamic-cluster-distribution), for details
        enabled: true
      replicas: 1
      resources:
        limits:
          cpu:
          memory: 512Mi
        requests:
          cpu: 10m
          memory: 512Mi
    dex:
      resources:
        limits:
          cpu:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
    haproxy:
      resources:
        limits:
          cpu:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
    helm:
      chart:
        name: argo-cd
        version: v7.7.16
      repository:
        name: argo-helm
        org: argoproj
        url: https://argoproj.github.io
    global:
      logging:
        # -- Available options are `debug`, `info', `warn` and `error`
        level: warn
    namespace: kube-system
    notifications:
      resources:
        limits:
          cpu:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
    redis:
      ha:
        # -- Redis HA requires at least 3 worker nodes
        enabled: false
        storage:
          enabled: false
          access_modes:
            - ReadWriteOnce
          class: longhorn
          size: 10Gi
      resources:
        limits:
          cpu:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
    repo_server:
      autoscaling:
        # -- If `false`, `replicas` value is set from `min_replicas` value
        enabled: true
        min_replicas: 1
        max_replicas: 3
        target:
          utilization_percentage:
            cpu:
            memory: 80
      resources:
        limits:
          cpu:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
    server:
      autoscaling:
        # -- If `false`, `replicas` value is set from `min_replicas` value
        enabled: true
        min_replicas: 1
        max_replicas: 3
        target:
          utilization_percentage:
            cpu:
            memory: 80
      credentials:
        admin:
          # -- (string) ArgoCD UI admin password, set at global level
          # @default -- Set value into [all.yaml](../../inventory/cluster/group_vars/all.yaml) `credentials` collection
          password:
        user:
          # -- (string) ArgoCD UI user name, set at global level
          # @default -- Set value into [all.yaml](../../inventory/cluster/group_vars/all.yaml) `credentials` collection
          name:
          # -- (string) ArgoCD UI user password, set at global level
          # @default -- Set value into [all.yaml](../../inventory/cluster/group_vars/all.yaml) `credentials` collection
          password:
      gateway:
        service: argo-cd-argocd-server
      resources:
        limits:
          cpu:
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
      subdomain: argocd
  release:
    checksum: cli_checksums.txt
    file: argocd-linux-arm64
    repository:
      name: argo-cd
      org: argoproj
    version: v2.13.3
