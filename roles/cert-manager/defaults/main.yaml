---
# Kubernetes namespace where cert-manager resources should be installed
cert_manager_namespace: "cert-manager"

# The following table contains the configurable parameters of the cert-manager
# chart and their default values. For all possible values see:
# https://artifacthub.io/packages/helm/cert-manager/cert-manager#configuration
#
# The following default settings should be a good starting point for most users:
#
# - crds.enabled: If true, CRD resources will be installed as part of the Helm chart.
# - crds.keep: If true, CRD resources will not be deleted when uninstalling the Helm chart.
#              If false, uninstalling CRD resources will be deleted causing all
#              installed custom resources to be DELETED!
cert_manager_values:
  - crds.enabled=true
  - crds.keep=true
  - global.leaderElection.namespace="{{ cert_manager_namespace }}"

certmanager_vars:
  release:
    repository:
      org: "cert-manager"
      name: "cmctl"
    version: "v2.1.1"
    checksum: "https://github.com/cert-manager/cmctl/releases/download/v2.1.1/checksums.txt"
    file: "cmctl_linux_amd64"

  bin_directory: "/usr/local/bin"  # Set this to the correct directory for your environment

  kubernetes:
    helm:
      chart:
        name: cert-manager
        # IMPORTANT: Remove the leading 'v' to avoid the '--version=v1.16.3' CLI issue
        version: 1.16.3  # <-- Was "v1.16.3", now "1.16.3"
      repository:
        name: cert-manager
        org: jetstack
        url: https://charts.jetstack.io

    namespace: "cert-manager"

    global:
      log_level: "info"

    cainjector:
      resources:
        limits:
          cpu: "100m"
          memory: "128Mi"
        requests:
          cpu: "10m"
          memory: "128Mi"

    controller:
      replicas: 2
      resources:
        limits:
          cpu: "200m"
          memory: "256Mi"
        requests:
          cpu: "100m"
          memory: "128Mi"

    webhook:
      replicas: 1
      resources:
        limits:
          cpu: "50m"
          memory: "128Mi"
        requests:
          cpu: "25m"
          memory: "64Mi"

  map:
    metrics:
      service:
        monitor:
          enabled: true
          scrape:
            interval: "30s"
            timeout: "10s"

  postinstall: true

victoriametrics_map:
  service:
    monitor:
      scrape:
        interval: "15s"
        timeout: "5s"

victoriametrics_vars:
  kubernetes:
    namespace: "monitoring"